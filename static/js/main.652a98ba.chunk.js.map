{"version":3,"sources":["component/adminPanel/login/Register.js","component/adminPanel/common/Header.js","component/adminPanel/common/Sidebar.js","component/adminPanel/Pages/product/AddProduct.js","component/adminPanel/Pages/product/UpdateProduct.js","component/adminPanel/Pages/categories/UpdateCategories.js","Services/Constant.js","component/adminPanel/Pages/subCat/UpdateSubCat.js","Services/Actions/SubCatAction.js","Services/Actions/TagAction.js","component/adminPanel/Pages/tags/AllTags.js","component/adminPanel/Pages/tags/UpdateTag.js","App.js","reportWebVitals.js","Services/Reducer/TagRaducer.js","Services/Reducer/subCatRaducer.js","Services/Reducer/index.js","store.js","index.js"],"names":["Register","Header","history","useHistory","className","href","id","type","placeholder","role","onClick","localStorage","clear","push","Sidebar","getItem","to","AddProduct","withRouter","props","useState","catData","setCatData","data","setData","useEffect","a","fetch","match","params","result","json","resultcat","name","setName","price","setPrice","cat","setCat","sub_cat","subCat","setSubCat","image","setImage","tag","setTag","sku","setSku","short_desc","shortDesc","setShortDesc","qty","setQty","proViewType","setProViewType","stock","setStock","user","JSON","parse","long_desc","longDesc","setLongDesc","status","setStatus","console","warn","alert","formData","FormData","append","pro_view_type","method","body","Form","Group","controlId","Control","defaultValue","onChange","e","target","value","min","Select","Figure","Image","width","height","alt","src","files","map","item","key","cat_name","as","rows","Button","variant","update","size","cat_file","GET_ALL_TAGS","CREATE_TAG","UPDATED_TAG","FIND_SINGLE_TAG","DELETE_SINGLE_TAG","CHANGE_STATUS_TAG_BUTTON","GET_ALL_SUBCATS","CREATE_SUBCATS","UPDATED_SUBCATS","FIND_SINGLE_SUBCATS","DELETE_SINGLE_SUBCATS","CHANGE_STATUS_SUBCATS_BUTTON","catId","setCatId","dispatch","useDispatch","subCatSelect","useSelector","state","subCatRaducer","log","axios","get","payload","msg","getSingleSubCat","getCatData","subError","subCatData","cat_id","userId","userRole","post","updateSubCatAc","getAllTagAc","updatedTag","tagsSel","TagRaducer","tagsData","deleteTag","delete","deleteSingleTag","statusChange","statusChangeTagButon","Table","striped","bordered","hover","style","findSingleTag","error","setError","TagState","updateState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","tags","filter","store","createStore","rootRaducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.652a98ba.chunk.js","sourcesContent":["import React , { useState , useEffect } from 'react';\r\n \r\nimport {useHistory} from 'react-router-dom';\r\n \r\n\r\n\r\n\r\n\r\nfunction Register(){\r\n    const [name,setName]= useState(\"\");\r\n    const [email,setEmail]= useState(\"\");\r\n    const [password,setPass]= useState(\"\");\r\n    const [cpass,setCpass]= useState(\"\");\r\n    let history= useHistory();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(()=> {\r\n    if(localStorage.getItem('user-info'))\r\n    {\r\n       history.push('/'); \r\n    }\r\n\r\n}, );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function signUp(){\r\n \r\nif(password===cpass){\r\n\r\n    let item = {name,email,password};\r\n    console.warn(item);\r\n    \r\n    let result = await fetch(\"http://127.0.0.1:8000/api/register\",{\r\n    method: 'POST',\r\n    headers:{\r\n        \"Content-Type\":\"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(item)\r\n    \r\n    }) ;\r\n    result = await result.json();\r\n \r\n    console.warn(\"result\",result); \r\n    \r\n    history.push('/login');\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n\r\n\r\n<div id=\"layoutAuthentication\" class=\"bg-primary\">\r\n            <div id=\"layoutAuthentication_content\">\r\n                <main>\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-lg-7\">\r\n                                <div className=\"card shadow-lg border-0 rounded-lg mt-5\">\r\n                                    <div className=\"card-header\"><h3 className=\"text-center font-weight-light my-4\">Create Account</h3></div>\r\n                                    <div className=\"card-body\">\r\n                                        <form>\r\n                                            <div className=\"row mb-3\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-floating mb-3 mb-md-0\">\r\n                                                        <input className=\"form-control\" id=\"Name\" type=\"text\"  value={name} onChange={((e)=>setName(e.target.value))}placeholder=\"Enter your   name\" />\r\n                                                        <label for=\"inputFirstName\">First name</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                <div className=\"form-floating mb-3 \">\r\n                                                <input className=\"form-control\" id=\"inputEmail\" type=\"email\" value={email} onChange={((e)=>setEmail(e.target.value))} placeholder=\"name@example.com\" />\r\n                                                <label for=\"inputEmail\">Email address</label>\r\n                                            </div>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                            <div className=\"row mb-3\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-floating mb-3 mb-md-0\">\r\n                                                        <input className=\"form-control\" id=\"inputPassword\" value={password} onChange={((e)=>setPass(e.target.value))} type=\"password\" placeholder=\"Create a password\" />\r\n                                                        <label for=\"inputPassword\">Password</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-floating mb-3 mb-md-0\">\r\n                                                        <input className=\"form-control\" id=\"inputPasswordConfirm\" type=\"password\"  value={cpass} onChange={((e)=>setCpass(e.target.value))} placeholder=\"Confirm password\" />\r\n                                                        <label for=\"inputPasswordConfirm\">Confirm Password</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"mt-4 mb-0\">\r\n                                                <div className=\"d-grid\"><button  type=\"button\" class=\"btn btn-primary btn-block\" onClick={ signUp }>Create Account</button></div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n          \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n)\r\n\r\n}\r\n\r\n\r\n\r\nexport default Register","import {Navbar,Container,Nav,NavDropdown} from 'react-bootstrap';\r\nimport { Link , useHistory  } from 'react-router-dom';\r\n\r\n \r\n\r\n\r\nfunction Header(){\r\n  let user , name;\r\n  const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n  // if(localStorage.getItem('user-info')){\r\n  //   user = JSON.parse(localStorage.getItem('user-info'));\r\n  \r\n  // }else{\r\n  //   name = \"User Name\";\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction logout(){\r\n \r\n  localStorage.clear();\r\n  history.push('/login');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\n    return(\r\n\r\n\r\n<>\r\n \r\n<nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n      \r\n            <a className=\"navbar-brand ps-3\" href=\"index.html\">Start Bootstrap</a>\r\n            \r\n            <button className=\"btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0\" id=\"sidebarToggle\" href=\"#!\"><i className=\"fas fa-bars\"></i></button>\r\n             \r\n            <form className=\"d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0\">\r\n                <div className=\"input-group\">\r\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search for...\" aria-describedby=\"btnNavbarSearch\" />\r\n                    <button className=\"btn btn-primary\" id=\"btnNavbarSearch\" type=\"button\"><i className=\"fas fa-search\"></i></button>\r\n                </div>\r\n            </form>\r\n          \r\n            <ul className=\"navbar-nav ms-auto ms-md-0 me-3 me-lg-4\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\"></i></a>\r\n                    <ul className=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\r\n                        <li><a className=\"dropdown-item\" href=\"#!\">Settings</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#!\">Activity Log</a></li>\r\n                        <li><hr className=\"dropdown-divider\" /></li>\r\n                        <li><a className=\"dropdown-item\" onClick={logout} >Logout</a></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n\r\n</>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header","import React, { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div id=\"layoutSidenav_nav\">\r\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n                <div className=\"sb-sidenav-menu\">\r\n                    {\r\n                        localStorage.getItem('user-info') ?\r\n                            <div className=\"nav\">\r\n                                <Link className=\"nav-link\" to=\"/\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\r\n                                    Dashboard\r\n                                </Link>\r\n\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#cotegories\" aria-expanded=\"false\" aria-controls=\"collapsePages\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    categories\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\r\n                                </a>\r\n\r\n                                <div className=\"collapse\" id=\"cotegories\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav accordion\" id=\"sidenavAccordionPages\">\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/allcat\"  >\r\n                                            All  Categories\r\n                                        </Link>\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/addcat\"  >\r\n                                            Add Category\r\n                                        </Link>\r\n\r\n\r\n\r\n                                    </nav>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#subcategories\" aria-expanded=\"false\" aria-controls=\"collapsePages\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    Sub  Categories\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\r\n                                </a>\r\n\r\n                                <div className=\"collapse\" id=\"subcategories\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav accordion\" id=\"sidenavAccordionPages\">\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/allsubcat\"  >\r\n                                            All Sub Categories\r\n                                        </Link>\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/addsubcat\"  >\r\n                                            Add Sub Category\r\n                                        </Link>\r\n\r\n\r\n\r\n                                    </nav>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#tags\" aria-expanded=\"false\" aria-controls=\"collapsePages\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    Tag\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\r\n                                </a>\r\n\r\n                                <div className=\"collapse\" id=\"tags\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav accordion\" id=\"sidenavAccordionPages\">\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/alltags\"  >\r\n                                            All  Tags\r\n                                        </Link>\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/addtags\"  >\r\n                                            Add Tags\r\n                                        </Link>\r\n\r\n\r\n\r\n                                    </nav>\r\n                                </div>\r\n\r\n  \r\n\r\n\r\n\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePages\" aria-expanded=\"false\" aria-controls=\"collapsePages\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    product\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\r\n                                </a>\r\n\r\n\r\n                                <div className=\"collapse\" id=\"collapsePages\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav accordion\" id=\"sidenavAccordionPages\">\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/pro\"  >\r\n                                            Products\r\n                                        </Link>\r\n\r\n                                        <Link className=\"nav-link collapsed\" to=\"/add\"  >\r\n                                            Add Producnt\r\n                                        </Link>\r\n\r\n\r\n                                    </nav>\r\n                                </div>\r\n                                <Link className=\"nav-link collapsed\" to=\"/orders\"     >\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    Orders\r\n\r\n                                </Link>\r\n                                <Link className=\"nav-link collapsed\" to=\"/users\"  >\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    Users\r\n\r\n                                </Link>\r\n                                <Link className=\"nav-link collapsed\" to=\"/contact\"  >\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-book-open\"></i></div>\r\n                                    Contact\r\n\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                            :\r\n                            <div className=\"nav\">\r\n                                <Link className=\"nav-link\" to=\"/register\">\r\n                                    Register\r\n                                </Link>\r\n                                <Link className=\"nav-link\" to=\"/login\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n                <div className=\"sb-sidenav-footer\">\r\n                    <div className=\"small\">Logged in as:</div>\r\n                    Start Bootstrap\r\n                </div>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Sidebar","import Header from '../../common/Header';\r\nimport { Form,Image, Alert, FloatingLabel, Button, Tab, Col, Nav, Row, Accordion } from 'react-bootstrap';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Sidebar from '../../common/Sidebar';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Checkbox, Hidden } from '@material-ui/core';\r\n \r\n\r\n\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined'\r\nimport { ImageAlt, NodeMinusFill } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nfunction AddProduct() {\r\n\r\n  const history = useHistory();\r\n  let [name, setName] = useState(\"\");\r\n  let [price, setPrice] = useState();\r\n  let [salePrice, setSalePrice] = useState(null);\r\n\r\n  // const scrollContainerStyle = { width: \"200px\", maxHeight: \"100px\" };\r\n  // Start cat Variable \r\n  let [cat, setCat] = useState(\"\");\r\n  let [catStatus, setCatStatus] = useState(false);\r\n  let [newCat, setNewCat] = useState(false);\r\n\r\n  // End cat Variable \r\n\r\n  // Start Sub Categories Variable \r\n  let [subCat, setSubCat] = useState([]);\r\n\r\n  let [subCatStatus, setSubCatStatus] = useState(false);\r\n  let [subCatParentStatus, setSubCatParentStatus] = useState(false);\r\n  let [subCatParentId, setSubCatParentId] = useState('');\r\n  let [newSubCat, setNewSubCat] = useState('');\r\n  let [subCatOptions, setSubCatOptions] = useState([]);\r\n  // End Sub Categories Variable\r\n\r\n\r\n  // Start Tags Variable \r\n\r\n  let [tagData, setTagData] = useState([]);\r\n  let [tag, setTag] = useState([]);\r\n\r\n  let [tagStatus, setTagStatus] = useState(false);\r\n  let [newtag, setNewTag] = useState(\"\");\r\n\r\n  // End Tags Variable\r\n\r\n\r\n\r\n//Gallery\r\n\r\nlet [galleryPreview,setGalleryPreview] = useState([]);\r\nlet [gallery, setgallery] = useState([]);\r\nlet [galleryId,setGalleryId]=useState();\r\n\r\n//End Gallery\r\n\r\n\r\n\r\n//Start Image\r\n\r\n  let [image, setImage] = useState(\"\");\r\n  let [imageId, setImageId] = useState(null);\r\n  let [imagePreview, setImagePreview] = useState(\"\");\r\n\r\n\r\n \r\n\r\n\r\n\r\n//End Image\r\n \r\n\r\n  let [sku, setSku] = useState();\r\n  let [shortDesc, setShortDesc] = useState(\"\");\r\n  let [longDesc, setLongDesc] = useState(\"\");\r\n  let [status, setStatus] = useState(\"\");\r\n  let [qty, setQty] = useState(\"\");\r\n  let [proViewType, setProViewType] = useState(\"\");\r\n  const [stock, setStock] = useState();\r\n  const user = JSON.parse(localStorage.getItem('user-info'));\r\n  let [subCatData, setSubCatData] = useState([]);\r\n\r\n \r\n\r\n  let [catData, setCatData] = useState([]);\r\n\r\n  let [weight, setWeight] = useState(\"\");\r\n  let [width, setWidth] = useState(\"\");\r\n  let [height, setHeight] = useState(\"\");\r\n  let [lenght, setLenght] = useState(\"\");\r\n  let [purchaseNote, setPurchaseNotes] = useState(\"\");\r\n\r\n  let [error, setError] = useState('');\r\n  let [stockManage, setStockManage] = useState(false);\r\n  let [reviewStatus, setReviewStatus] = useState(false);\r\n  const attrTemplate = { size: \"\", color: \"\", type: \"\" };\r\n  const [attrs, setAttrs] = useState([attrTemplate]);\r\n  const addAttr = () => {\r\n    setAttrs([...attrs, attrTemplate])\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    allCat();\r\n    allTags()\r\n    subCatFun();\r\n\r\n\r\n  }, [])\r\n\r\n\r\n  const onChange = (e, index) => {\r\n\r\n\r\n    const updateattrs = attrs.map((user, i) =>\r\n      index == i ? Object.assign(user, {\r\n        [e.target.name]: e.target.value,\r\n\r\n\r\n      })\r\n        : user)\r\n    setAttrs(updateattrs)\r\n  };\r\n\r\n\r\n  // console.warn('Stock Manage', stockManage)\r\n\r\n\r\n\r\n\r\n  const removeAttr = (index) => {\r\n    const filterattr = [...attrs];\r\n    filterattr.splice(index, 1);\r\n    setAttrs(filterattr);\r\n  }\r\n\r\n\r\n\r\nfunction setCatFun(e){\r\n \r\n  setCat(e.target.value);\r\n if(cat!=0 && cat!=''){\r\n   \r\n   setError(\"Please Select Category\")\r\n  }else{\r\n   setError('');\r\n  \r\n }\r\n  \r\n  \r\n}\r\n\r\nfunction setNameFun(e){\r\n  \r\n  setName(e.target.value);\r\n if(name==\"\"){\r\n  setError(\"Please Enter Product Name\")\r\n    \r\n }else if(name!=''){\r\n   setError('')\r\n }\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n  async function allCat() {\r\n    let result = await fetch(\"http://127.0.0.1:8000/api/allcat\");\r\n    result = await result.json();\r\n    setCatData(result);\r\n\r\n    subCatFun()\r\n  }\r\n\r\n\r\n  async function allTags() {\r\n    let result = await fetch(\"http://127.0.0.1:8000/api/alltags\");\r\n    result = await result.json();\r\n    setTagData(result);\r\n    // console.log(result)\r\n    subCatFun()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ///ADD New Categories\r\n\r\n\r\n\r\n\r\n  async function addNewCat() {\r\n\r\n    const formData = new FormData();\r\n    // console.log(\"Cat\", newCat)\r\n    if (newCat == '' || newCat == null) {\r\n      formData.append('new_cat_name', null);\r\n\r\n\r\n    } else {\r\n      formData.append('new_cat_name', newCat);\r\n      setNewCat(null);\r\n      formData.append('status', 1);\r\n      formData.append('user_id', user.id);\r\n\r\n\r\n      let result = await fetch(\"http://127.0.0.1:8000/api/addcat\", {\r\n\r\n        method: 'POST',\r\n\r\n        body: formData\r\n      });\r\n\r\n      result = await result.json();\r\n      // console.warn(result);\r\n      allCat();\r\n      subCatFun()\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  ///End Add New Categories\r\n\r\n\r\n  // Start New Sub Cartegory\r\n\r\n\r\n\r\n  async function addNewSubCat() {\r\n\r\n    const formData = new FormData();\r\n    if(newSubCat==''){\r\n      setError(\"Please Enter Sub Category Name\")\r\n    \r\n    }else{\r\n\r\n      formData.append('name', newSubCat);\r\n    }\r\n\r\n\r\n    if (cat != '' && newSubCat != '') {\r\n\r\n      formData.append('user_id', user.id);\r\n      formData.append('cat_id', cat);\r\n      formData.append('status', 1);\r\n\r\n\r\n\r\n    \r\n// setError(\"\");\r\n\r\nif(subCatParentId!='' && subCatParentId!=null && subCatParentId!=0 ){\r\n\r\n  formData.append('parent_id', subCatParentId);\r\n  subCatFun();\r\n}else\r\n{\r\n  formData.append('parent_id',0);\r\n}\r\n \r\n      let result = await fetch(\"http://127.0.0.1:8000/api/addsubcat\",\r\n        {\r\n          method: \"POST\",\r\n          body: formData\r\n        }\r\n\r\n      );\r\n      result = await result.json();\r\n\r\n\r\n      \r\n      console.warn(\"check\",result)\r\n\r\n\r\n\r\n\r\n      if (result.result == \"Inserted\") {\r\nsetError('');\r\n        subCatFun();\r\n        \r\n      }\r\n      else if (result.result == \"a\") {\r\n        setError(\"Sub Category Alerady Exist\")\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  // End  Add New Sub categories\r\n\r\n \r\n\r\n  // Start get  Sub Cat Change Options\r\n  let subCatvalue = subCat;\r\n\r\n  function getSubCatValue(e) {\r\n\r\n    if (e.target.checked == true) {\r\n\r\n      subCatvalue.push(e.target.value);\r\n\r\n    }\r\n    else {\r\n\r\n      subCatvalue.map((itm, i) =>\r\n\r\n        itm == e.target.value ? subCatvalue.splice(i, 1) : null\r\n\r\n\r\n      )\r\n\r\n\r\n    }\r\n    // console.log(\"Data\", subCatvalue);\r\n\r\n  }\r\n\r\n\r\n \r\n  // End get Sub Cat Chnage Options \r\n\r\n\r\n\r\n\r\n  // Start get  Tag Change Options\r\n  let tagValue = tag;\r\n\r\n  function getTagValue(e) {\r\n\r\n    if (e.target.checked == true) {\r\n\r\n      tagValue.push(e.target.value);\r\n\r\n    }\r\n    else {\r\n\r\n      tagValue.map((itm, i) =>\r\n\r\n        itm == e.target.value ? tagValue.splice(i, 1) : null\r\n\r\n\r\n      )\r\n\r\n\r\n    }\r\n    // console.log(\"Tag Data\", tagValue);\r\n\r\n  }\r\n\r\n\r\n \r\n  // End get Sub Cat Chnage Options \r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Start Add Tags \r\n\r\n\r\n  async function addTag() {\r\n\r\n\r\n    const formData = new FormData();\r\n  \r\n\r\n\r\n\r\nif(newtag==''){\r\nsetError(\"Please Enter Your Tag Name\");\r\n}else{\r\n  setError('');\r\n}\r\n\r\n\r\n    if (newtag != '' && cat) {\r\n      \r\n      formData.append('user_id', user.id);\r\n      formData.append('name', newtag);\r\n      formData.append('cat_id', cat);\r\n\r\n\r\n      let result = await fetch(\"http://127.0.0.1:8000/api/addtag\",\r\n        {\r\n          method: \"POST\",\r\n          body: formData\r\n        }\r\n\r\n      );\r\n      result = await result.json();\r\n\r\n      // console.warn(\"tag\", result);\r\n\r\n\r\n      if (result.result[0] == \"Inserted\") {\r\n        allTags()\r\n      }\r\n\r\n      if (result.result[0] == \"a\") {\r\n        setError(\"This Tag is Already Exits\");\r\n      }\r\n\r\n\r\n    }\r\n \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  async function subCatFun() {\r\n    let result;\r\n\r\n    if (cat == '' || cat == null || cat == '0') {\r\n      result = await fetch(\"http://127.0.0.1:8000/api/allsubcat/\");\r\n    } else {\r\n      result = await fetch(\"http://127.0.0.1:8000/api/findsubcatpro/\" + cat);\r\n    }\r\n    result = await result.json();\r\n    setSubCatOptions(result)\r\n\r\n\r\n    console.warn(\"subcat\", subCatOptions)\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function galleryFun(e){\r\n  \r\nsetgallery(e.target.files);\r\nconst formData  = new FormData();\r\n\r\nconsole.warn('gallery',e.target.files)\r\n  if (e.target.files== \"\" || e.target.files == null) {\r\n    formData.append('gallery',null);\r\n  }\r\n\r\n  else {\r\nArray.from(e.target.files).map((itm,i)=>\r\nformData.append(\"gallery[]\",itm)\r\n\r\n\r\n)\r\nformData.append(\"user_id\",user.id);\r\n\r\nlet result = await fetch(\"http://127.0.0.1:8000/api/addgallery\",{\r\n  method: 'POST',\r\n  body: formData\r\n})\r\n\r\nresult = await result.json();\r\n\r\n\r\n \r\nconsole.warn(\"Result\",result.id)\r\nsetGalleryPreview(result.images);\r\nconsole.warn(\"galleryPreview\",result.images)\r\nsetGalleryId(result.id);\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n ///Start Image Fun\r\n\r\n\r\nasync function imageFun(e){\r\n\r\nconst formData = new FormData();\r\n\r\nformData.append('user_id',user.id);\r\n \r\n\r\nsetImage(e.target.files[0]);\r\n \r\nif(e.target.files[0])\r\n{\r\n \r\n\r\nformData.append('image',e.target.files[0]);\r\nlet result = await fetch(\"http://127.0.0.1:8000/api/addimage\",{\r\n  method:\"POST\",\r\n  body:formData\r\n});\r\n\r\nresult = await result.json();\r\n\r\nsetImageId(result.data[0].id);\r\nsetImagePreview(result.data[0].image);\r\nconsole.warn(\"image id\",result.data[0].id)\r\nconsole.warn(\"image \",result.data[0].image)\r\nif(result.data[0].id!=null && result.data[0].id!=''){\r\n  setError('');\r\n}else{\r\nsetError(\"Please Select Other Image\")\r\nsetImageId('');\r\nsetImagePreview('');\r\n}\r\n \r\n}  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  End Image Function\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  async function productAdd() {\r\n    \r\n\r\n    const formData = new FormData();\r\n\r\n    // console.warn(attrs)\r\n\r\n\r\n\r\n    if (longDesc == \"\" || longDesc == null) {\r\n\r\n      formData.append('long_desc', null);\r\n   \r\n    }\r\n\r\n    else {\r\n   \r\n\r\n      formData.append('long_desc', longDesc);\r\n\r\n    }\r\n\r\n    if (name == \"\") {\r\n      setError(\"Please Enter Product Name\");\r\n\r\n    }\r\n    else {\r\n      formData.append('name', name);\r\n       \r\n    }\r\n\r\n \r\n    if (price == \"\" || price == null) {\r\n\r\n      formData.append('price', null);\r\n    }\r\n    else {\r\n      formData.append('price', price);\r\n      \r\n    }\r\n\r\n\r\n    if (salePrice == \"\" || salePrice == null) {\r\n      formData.append('sale_price', '');\r\n    }\r\n    else {\r\n      if (salePrice < price) {\r\n        formData.append('sale_price', salePrice);\r\n        \r\n\r\n      } else {\r\n\r\n        setError('Please Enter Valid Sale Price')\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    if (sku == '' || sku == null) {\r\n     \r\n      formData.append('sku', null);\r\n    } else {\r\n   \r\n      formData.append('sku', sku);\r\n    }\r\n\r\n  if (stockManage == false) {\r\n   \r\n      formData.append('stock_manage', 0);\r\n    } else {\r\n    \r\n      formData.append('stock_manage', 1);\r\n    }\r\n\r\n    if (qty == \"\" || qty == null) {\r\n      formData.append('qty', null);\r\n      \r\n    }\r\n    else {\r\n      \r\n      formData.append('qty', qty);\r\n\r\n    }\r\n\r\n\r\n    if (stock == 1 || stock == 0) {\r\n      formData.append('stock_status', stock);\r\n     \r\n    }\r\n    else {\r\n      \r\n      formData.append('stock_status', null);\r\n    }\r\n\r\n \r\n    if (width == '') {\r\n      formData.append('width', '');\r\n       \r\n    } else {\r\n  \r\n      formData.append('width', width);\r\n    }\r\n\r\n\r\n    if (height == '') {\r\n      formData.append('height', '');\r\n    } else {\r\n      formData.append('height', height);\r\n    }\r\n\r\n\r\n    if (lenght == '') {\r\n      formData.append('length', '');\r\n    }\r\n    else {\r\n      formData.append('length', 'length');\r\n    }\r\n\r\n\r\n\r\n\r\n    if (weight == '') {\r\n      formData.append('weight', '');\r\n    } else {\r\n      formData.append('weight', weight);\r\n    }\r\n\r\n    console.warn(\"checka\",attrs[0]['size'])\r\n\r\n\r\n    if (!attrs[0]['size'] && !attrs[0]['color'] && !attrs[0]['type']) {\r\n      formData.append('attrs','');\r\n\r\n\r\n\r\n    }\r\n    else {\r\n\r\n      // console.warn('atttrs',attrs)\r\n      attrs.map((val, key) => {\r\n \r\n        formData.append(\"attrs[size][]\", val.size)\r\n        formData.append(\"attrs[type][]\", val.type)\r\n        formData.append(\"attrs[color][]\", val.color)\r\n\r\n        \r\n\r\n\r\n\r\n\r\n      }\r\n\r\n      )\r\n    }\r\n\r\n\r\n\r\n    if (purchaseNote == '' || purchaseNote == null) {\r\n\r\n      formData.append('purchase_notes', \"\");\r\n       \r\n    }\r\n    else {\r\n   \r\n      formData.append('purchase_notes', purchaseNote);\r\n\r\n    }\r\n\r\n    if (reviewStatus == '' || reviewStatus == false) {\r\n      formData.append('review_status', 0);\r\n    }\r\n    else {\r\n      formData.append('review_status', 1);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    if (shortDesc == \"\" || shortDesc == null) {\r\n      formData.append('short_desc', '');\r\n    }\r\n    else {\r\n\r\n      formData.append('short_desc', shortDesc);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    if (proViewType == \"f\" || proViewType == \"t\" || proViewType == \"d\") {\r\n      formData.append('pro_view_type', proViewType);\r\n\r\n    }\r\n    else {\r\n      formData.append('pro_view_type', 'd');\r\n    }\r\n\r\n\r\n\r\n    if (status == \"1\" || status == '0') {\r\n      formData.append('status', status);\r\n\r\n    } else {\r\n      formData.append('status', '1');\r\n    }\r\n\r\n\r\n\r\n    if (cat == \"\" || cat == null) {\r\n      setError(\"Please Select Category\")\r\n    }\r\n    else {\r\n    \r\n      formData.append('cat', cat);\r\n\r\n    }\r\n\r\n    if (subCatvalue == \"\" || subCatvalue == '0') {\r\n      formData.append('sub_cat[]', [\"null\"]);\r\n\r\n    }\r\n    else {\r\n\r\n\r\n\r\n      formData.append('sub_cat[]', subCatvalue);\r\n    }\r\n\r\n\r\n\r\n    if (tag == \"\" || tag == null) {\r\n      formData.append('tag_id', null);\r\n    } else {\r\n      formData.append('tag_id', tag);\r\n    }\r\n\r\n\r\n\r\n    if (imageId == \"\" || image == null || image=='') {\r\n      setError(\"Please Select Image\");\r\n    }\r\n\r\n    else {\r\n\r\n      formData.append('image_id', imageId);\r\n\r\n    }\r\n    \r\n if(galleryId=='' , galleryId ==null){\r\n\r\nformData.append('gallery_id','')\r\n\r\n }\r\n else{\r\n   formData.append('gallery_id',galleryId)\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    formData.append('user_id', user.id);\r\n\r\n\r\n\r\n    if (name != '' && price != '' && image != '' && cat!='' && cat!=0 && cat!=null) {\r\n\r\n\r\nsetError(\"\");\r\n\r\n\r\n      let result = await fetch(\"http://127.0.0.1:8000/api/addproducts\", {\r\n\r\n        method: 'POST',\r\n\r\n        body: formData\r\n      });\r\n\r\n\r\n      result = await result.json();\r\n \r\n         history.push('/pro')\r\n       \r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div id=\"layoutSidenav\">\r\n        <Sidebar />\r\n\r\n        <div id=\"layoutSidenav_content\">\r\n          <main>\r\n\r\n\r\n\r\n\r\n         {   error==\"Please Enter Product Name\" || error=='Please Enter Valid Sale Price' || error=='Please Select Category'  || error=='Please Select Image' || error==\"Please Select Other Image\" ? \r\n          <Alert className='bg-danger text-light'>\r\n              <h4>{error}</h4>\r\n            </Alert>: \r\n            null }\r\n\r\n            <h1 >Add new product</h1>\r\n\r\n            <br />\r\n\r\n            <Form className=\"pro-form\">\r\n              <Row>\r\n\r\n                <Col xs=\"8\">\r\n                  <Form.Group className=\"mb-3  pro-add\" controlId=\"formBasicEmail\">\r\n\r\n                    <Form.Control type=\"text\" value={name} onChange={((e) => setNameFun(e))} placeholder=\"Product Name\" />\r\n                    <br />\r\n\r\n\r\n                    <Form.Control as=\"textarea\" placeholder=\"Long Description\" value={longDesc} onChange={((e) => setLongDesc(e.target.value))} rows={15} />\r\n                    <br />\r\n\r\n\r\n\r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                      <Row>\r\n                        <Col sm={2}>\r\n                          <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item aria-selected=\"false\" className=\"pro-nav-bar \">\r\n                              <Nav.Link eventKey=\"general\" >General</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                              <Nav.Link eventKey=\"inventory\">Inventory</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                              <Nav.Link eventKey=\"shipping\">Shipping</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                              <Nav.Link eventKey=\"attributes\">Attributes</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                              <Nav.Link eventKey=\"advanced\">Advanced</Nav.Link>\r\n                            </Nav.Item>\r\n                          </Nav>\r\n                        </Col>\r\n                        <Col sm={10}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"general\">\r\n                              <Row >\r\n                                <Col xs=\"4\">      Regular price ($) </Col>\r\n                                <Col xs=\"8\">\r\n                                  <Form.Control type='number' min=\"0\" value={price} onChange={((e) => setPrice(e.target.value))} placeholder=\" Price\" />\r\n\r\n                                </Col>\r\n\r\n                              </Row> <br />\r\n                              <Row >\r\n                                <Col xs=\"4\">      Sale price ($) </Col>\r\n                                <Col xs=\"8\">\r\n                                  <Form.Control type='number' min=\"0\" value={salePrice} onChange={((e) => setSalePrice(e.target.value))} placeholder=\" Sale Price\" />\r\n\r\n                                </Col>\r\n\r\n                              </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"inventory\">\r\n\r\n                              <Row  >\r\n                                <Col xs=\"4\">\r\n\r\n                                  <span className=\"text-muted\">SKU  </span>   <br />\r\n                                </Col>\r\n                                <Col xs=\"8\" className=\"inv-pro\">\r\n                                  <Form.Control type=\"number\" min=\"0\" value={sku} onChange={((e) => setSku(e.target.value))} placeholder=\"Sku\" />\r\n                                  <span className=\"error\">{error == \"Please Enter SkU\" ? error : null}</span>\r\n                                  <br />\r\n\r\n                                </Col>\r\n\r\n                              </Row>\r\n                              <Row  >\r\n                                <Col xs=\"4\">\r\n\r\n                                  <span className=\"text-muted\">Manage stock? </span>   <br />\r\n                                </Col>\r\n                                <Col xs=\"7\"  >\r\n                                  <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    onChange={((e) => setStockManage(e.target.checked))}\r\n\r\n                                    label=\"Enable stock management at product level \"\r\n                                  />\r\n\r\n\r\n                                </Col>\r\n\r\n                              </Row>  <br />\r\n\r\n                              {stockManage == true ?\r\n                                <Row >\r\n                                  <Col xs=\"4\">\r\n                                    <br />\r\n\r\n                                    <span className=\"text-muted mt-4\">Quantity</span>\r\n\r\n                                  </Col>\r\n                                  <Col className=\"inv-pro\" xs=\"8\">\r\n\r\n                                    <br />\r\n                                    <Form.Control type='number' min=\"1\" value={qty} onChange={((e) => setQty(e.target.value))} placeholder=\"Qty\" />\r\n                                    <br /><br />\r\n                                  </Col>\r\n\r\n                                </Row> : null\r\n                              }\r\n                              <br />\r\n\r\n\r\n\r\n\r\n                              <Row >\r\n                                <Col xs=\"4\">\r\n\r\n\r\n                                  <span className=\"text-muted\"> Stock Status </span>\r\n                                </Col>\r\n                                <Col className=\"inv-pro\" xs=\"8\">\r\n\r\n\r\n\r\n                                  <Form.Select value={stock} onChange={((e) => setStock(e.target.value))} >\r\n\r\n                                    <option value=\"1\"> In of Stock   </option>\r\n                                    <option value=\"0\">Out of Stock</option>\r\n                                  </Form.Select>\r\n                                </Col>\r\n\r\n                              </Row>\r\n\r\n\r\n\r\n                            </Tab.Pane>\r\n\r\n\r\n\r\n\r\n\r\n                            <Tab.Pane eventKey=\"shipping\">\r\n\r\n                              <Row >\r\n                                <Col xs=\"12\">\r\n                                  <FloatingLabel controlId=\"floatingInputGrid\" label=\"Weight\">\r\n                                    <Form.Control onChange={((e) => setWeight(e.target.value))} type=\"text\" placeholder=\"Weight\" />\r\n                                  </FloatingLabel>\r\n                                </Col>\r\n\r\n\r\n                              </Row> <br />\r\n                              <Row >\r\n                                <Col xs=\"4\">\r\n                                  <FloatingLabel controlId=\"floatingInputGrid\" label=\"Width\">\r\n                                    <Form.Control onChange={((e) => { setWidth(e.target.value) })} type=\"text\" placeholder=\"Width\" />\r\n                                  </FloatingLabel>\r\n                                </Col>\r\n                                <Col xs=\"4\">\r\n                                  <FloatingLabel controlId=\"floatingInputGrid\" label=\"Height\">\r\n                                    <Form.Control value={height} onChange={((e) => { setHeight(e.target.value) })} type=\"text\" placeholder=\"Height\" />\r\n                                  </FloatingLabel>\r\n                                </Col>\r\n                                <Col xs=\"4\">\r\n                                  <FloatingLabel controlId=\"floatingInputGrid\" label=\"Lenght\">\r\n                                    <Form.Control value={lenght} onChange={((e) => setLenght(e.target.value))} type=\"text\" placeholder=\"Lenght\" />\r\n                                  </FloatingLabel>\r\n                                </Col>\r\n\r\n\r\n                              </Row>\r\n\r\n\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"attributes\">\r\n                              {\r\n\r\n                                attrs.map((item, index) =>\r\n\r\n                                  <Row key={index} className=\"mb-4\" >\r\n\r\n                                    <Col xs=\"3\">\r\n                                      <FloatingLabel controlId=\"floatingInputGrid\" label=\" size\">\r\n                                        <Form.Control value={item.name} name=\"size\" onChange={e => onChange(e, index)} size=\"sm\" label=\"Size\" type=\"text\" />\r\n                                      </FloatingLabel>\r\n                                    </Col>\r\n                                    <Col xs=\"3\">\r\n                                      <FloatingLabel controlId=\"floatingSelectGrid\" label=\"colors\">\r\n                                        <Form.Select name=\"color\" onChange={e => onChange(e, index)} value={item.color} aria-label=\"Floating label select example\">\r\n                                          <option> select </ option>\r\n                                          <option >Red</option>\r\n                                          <option >Green</option>\r\n                                          <option >Blue</option>\r\n                                          <option >Yellow</option>\r\n                                        </Form.Select>\r\n                                      </FloatingLabel>\r\n\r\n                                    </Col>\r\n                                    <Col xs=\"3\">\r\n                                      <FloatingLabel controlId=\"floatingInputGrid\" label=\"type\">\r\n                                        <Form.Control onChange={e => onChange(e, index)} value={item.type} name=\"type\" size=\"sm\" label=\"type\" type=\"text\" />\r\n                                      </FloatingLabel>\r\n                                    </Col>\r\n\r\n                                    <Col xs=\"2\">\r\n\r\n                                      <DeleteOutlinedIcon onClick={() => removeAttr(index)}></DeleteOutlinedIcon>\r\n\r\n                                    </Col>\r\n\r\n\r\n                                  </Row>\r\n                                )\r\n                              }\r\n\r\n                              <Row>\r\n                                <Col xs=\"3\">\r\n                                  <Button className=\"publish-btn\" onClick={addAttr} variant=\"primary\"  >\r\n                                    Add\r\n                                  </Button>\r\n                                </Col>\r\n                              </Row>\r\n\r\n\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"advanced\">\r\n\r\n\r\n                              <Row>\r\n                                <Col >\r\n                                  <Form.Control value={purchaseNote} onChange={((e) => setPurchaseNotes(e.target.value))} placeholder=\"Purchase Notes\" as=\"textarea\" rows={3} /> <br />\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n\r\n                                <Col xs=\"4\">\r\n\r\n                                  <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"autoSizingCheck\"\r\n                                    onChange={((e) => setReviewStatus(e.target.checked))}\r\n                                    label=\"Enable Review\"\r\n                                  /></Col>\r\n\r\n                              </Row>\r\n\r\n\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    <br />\r\n                    <Form.Control value={shortDesc} onChange={((e) => setShortDesc(e.target.value))} placeholder=\"Short Desciption\" as=\"textarea\" rows={10} />\r\n\r\n\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                </Col>\r\n                <Col xs=\"4\">\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header>Publish</Accordion.Header>\r\n                      <Accordion.Body>\r\n\r\n                        <Button className=\"preview-btn\" variant=\"primary\" size=\"lg\">\r\n                          Perview\r\n                        </Button>\r\n                        <br /> <br />\r\n                        <Form.Select value={proViewType} onChange={((e) => setProViewType(e.target.value))} >\r\n                          \r\n                          <option value=\"d\"> Default Product </option>\r\n                          <option value=\"f\">  Feature Product </option>\r\n                          <option value=\"t\"> Top Product</option>\r\n                        </Form.Select>\r\n                        <br />\r\n                        <Form.Select value={status} onChange={((e) => setStatus(e.target.value))}>\r\n\r\n                        \r\n                          <option value=\"1\">Active</option>\r\n                          <option value=\"0\" >Deactive</option>\r\n\r\n                        </Form.Select> <br />\r\n\r\n                        <Button className=\"publish-btn\" variant=\"primary\" onClick={productAdd} size=\"lg\">\r\n                          Publish\r\n                        </Button>\r\n\r\n\r\n\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n                  <br /><br />\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header>Categories</Accordion.Header>\r\n                      <Accordion.Body >\r\n\r\n                        <Row >\r\n\r\n                          <Col xs=\"12\">\r\n                            <Form.Select value={cat} onChange={((e) => setCatFun(e))} >\r\n                              <option value='0'>Select Category</option>\r\n                              {\r\n\r\n                                catData.map((item, i) =>\r\n\r\n                                  <option value={item.id} key={i}>{item.cat_name}</option>\r\n\r\n                                )\r\n\r\n                              }\r\n\r\n                            </Form.Select>\r\n\r\n\r\n\r\n                          </Col>\r\n                        </Row>\r\n\r\n\r\n\r\n                        \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n\r\n\r\n\r\n\r\n\r\n                  <Accordion className=\"mt-5\" defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header> Sub Categories  \r\n\r\n\r\n\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                      <span className=\"text-danger \">{error=='Sub Category Alerady Exist' || error ==\"Please Enter Sub Category Name\" ? error : null} </span> <br />\r\n<Row>\r\n\r\n\r\n                        {\r\n\r\n\r\n\r\n\r\n                          subCatOptions.map((sub, itm) =>\r\n\r\n                            sub.cat_id == cat ?<Col xs={4}><Form.Check  className=\"overText\" key={itm} value={sub.id} onChange={((e) => getSubCatValue(e))} label={sub.name} /> </Col>: null\r\n\r\n\r\n\r\n\r\n                          )\r\n\r\n\r\n                        }\r\n                        </Row>\r\n\r\n\r\n\r\n\r\n                        {\r\n\r\n                          subCatStatus==true ? <>\r\n                            <Row className=\"mt-3\">\r\n                              <Col >\r\n                                <Form.Control onChange={((e) => setNewSubCat(e.target.value))} placeholder=\"New Sub Category\" /> <br />\r\n                              </Col>\r\n                            </Row>\r\n\r\n\r\n\r\n\r\n                            {\r\n                              subCatParentStatus && cat && cat != 0 ?\r\n                                <Row className=\"mb-4\">\r\n\r\n                                  <Col xs=\"12\">\r\n                                    <Form.Select value={cat} onChange={((e) => setSubCatParentId(e.target.value))} >\r\n                                      <option value=\"0\" >Select Sub Parent Category</option>\r\n                                      {\r\n                                        subCatOptions.map((item, key) =>\r\n                                          item.cat_id == cat ? <option value={item.id} key={key}>{item.name}</option> : null\r\n                                        )\r\n                                      }\r\n\r\n\r\n                                    </Form.Select>\r\n\r\n\r\n\r\n                                  </Col>\r\n                                </Row> : null\r\n\r\n\r\n\r\n\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                         \r\n\r\n                            {cat && cat != 0 ? <span  > Your   Category is  {catData.map((itm, i) =>\r\n                              itm.id == cat ? <strong>: {itm.cat_name}</strong> : null\r\n\r\n                            )\r\n                            }</span> :\r\n                              <span className=\"text-danger\"> <strong>Please Select Category</strong> </span>\r\n                            }\r\n\r\n\r\n\r\n\r\n                            <Row>\r\n                              <Col >\r\n                                <Button className=\"publish-btn mt-2\" onClick={addNewSubCat} variant=\"warning\" size=\"lg\">\r\n                                  ADD\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                              <Col className=\"mt-3\" xs=\"8\">\r\n\r\n\r\n                                <Form.Check\r\n                                  type=\"checkbox\"\r\n                                  id=\"autoSizingCheck\"\r\n                                  onChange={((e) => setSubCatParentStatus(e.target.checked))}\r\n                                  label=\"Sub Parent Category Select\"\r\n                                />\r\n\r\n\r\n                              </Col>\r\n                            </Row>\r\n\r\n                          </>\r\n                            : null\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n                        <Row>\r\n                          <Col className=\"mt-3\" xs=\"8\">\r\n\r\n\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id=\"autoSizingCheck\"\r\n                              onChange={((e) => setSubCatStatus(e.target.checked))}\r\n                              label=\"+ Add new  Sub category\"\r\n                            />\r\n\r\n\r\n                          </Col>\r\n                        </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n                  <br /><br />\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header> Tags </Accordion.Header>\r\n                      <Accordion.Body>\r\n                      <span className=\"text-danger \">\r\n                        {\r\n                        error=='Please Enter Your Tag Name'  || error==\"This Tag is Already Exits\" ? error : null} \r\n                        </span>  \r\n                         <Row style={{overflow:'hidden' }}>\r\n                        {\r\n \r\ntagData.map((tag, itm) =>\r\n\r\ntag.cat_id == cat ?<Col xs=\"4\"><Form.Check className=\"overText\" key={itm} value={tag.id}   onChange={((e) => getTagValue(e))} label={tag.name}   /> </Col> : null\r\n \r\n)\r\n\r\n\r\n} \r\n</Row>\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n   {\r\n\r\n                          tagStatus ? <>\r\n                            <Row className=\"mt-3\">\r\n                              <Col >\r\n                                <Form.Control onChange={((e) => setNewTag(e.target.value))} placeholder=\"Enter New Tag Name\" /> <br />\r\n                              </Col>\r\n                            </Row>\r\n\r\n\r\n\r\n                            {cat && cat != 0 ? <span  > Your   Category is  {catData.map((itm, i) =>\r\n                              itm.id == cat ? <strong>: {itm.cat_name}</strong> : null\r\n\r\n                            )\r\n                            }</span> :\r\n                              <span className=\"text-danger\"> <strong>Please Select Category</strong> </span>\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                            <Row>\r\n                              <Col >\r\n                                <Button className=\"publish-btn\" onClick={addTag} variant=\"warning\" size=\"lg\">\r\n                                  ADD\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n\r\n\r\n\r\n                          </>\r\n                            : null\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n                        <Row>\r\n                          <Col className=\"mt-3\" xs=\"5\">\r\n\r\n\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id=\"autoSizingCheck\"\r\n                              onChange={((e) => setTagStatus(e.target.checked))}\r\n                              label=\"+ Add new  Tag\"\r\n                            />\r\n\r\n\r\n                          </Col>\r\n                        </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n                  <br /><br />\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header>Product </Accordion.Header>\r\n                      <Accordion.Body>\r\n\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n\r\n\r\n\r\n{imagePreview?\r\n\r\n<Row>\r\n    <Col xs={6} md={4}>\r\n      <Image  className=\"mb-4\" width={300} src={\"http://127.0.0.1:8000/\"+imagePreview} rounded />\r\n    </Col>\r\n   \r\n  </Row>\r\n:null\r\n\r\n}\r\n\r\n\r\n\r\n                          <Form.Control  type=\"file\" onChange={((e) =>  imageFun(e))} placeholder=\"Image\"  />\r\n                        </Form.Group>\r\n\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n                  <br /> <br />\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header>Products Gallery</Accordion.Header>\r\n\r\n                      <Accordion.Body>\r\n \r\n                      <Row className=\"mr-4\">                 {\r\n\r\ngalleryPreview?\r\n\r\ngalleryPreview.map((itm,i)=>\r\ni<10?\r\n \r\n<Col className=\"mr-4 \" key={i} xs={4} >\r\n  <Image className=\"mr-4 mb-2 mt-2 \"  width={100} src={\"http://127.0.0.1:8000/\"+itm} rounded />\r\n</Col>: null\r\n  \r\n\r\n)  \r\n \r\n: null\r\n\r\n\r\n                        }</Row>\r\n                      \r\n                        <span>{error==\"Show only 4 Images\"?error:null}</span>\r\n\r\n                        <Form.Group controlId=\"formFileMultiple\" className=\"mb-3 mt-4\">\r\n\r\n                          <Form.Control type=\"file\" onChange={((e) => galleryFun(e))} placeholder=\"Image\" multiple />\r\n                        </Form.Group>\r\n\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Col>\r\n\r\n\r\n              </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </main>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default AddProduct","import Header from '../../common/Header';\r\nimport { withRouter , useHistory } from 'react-router';\r\nimport { Form , Button , Figure    } from 'react-bootstrap';\r\nimport Sidebar from '../../common/Sidebar'; \r\nimport { useEffect, useState  } from 'react';\r\n\r\n\r\n\r\nfunction UpdateProduct(props){\r\n\r\n\r\n  const [catData , setCatData] = useState([]);\r\n  let [data , setData] = useState(\"\");\r\n\r\n  useEffect( async ()=>{\r\n   \r\n    let result = await fetch(\"http://127.0.0.1:8000/api/productfind/\"+props.match.params.id);\r\n    result  = await result.json();\r\n    setData(result);\r\n \r\n},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect( async ()=>{\r\nlet resultcat  = await fetch(\"http://127.0.0.1:8000/api/allcat\");\r\n   resultcat = await resultcat.json();  \r\n   setCatData(resultcat);\r\n },[])\r\n \r\n \r\n \r\n\r\n\r\n\r\n// alert(data.name)\r\n  const history = useHistory();\r\n\r\nconst [name , setName] = useState(data.name);\r\nlet [price , setPrice] = useState(data.price);\r\nconst [cat , setCat] = useState(data.cat);\r\nconst [subCat , setSubCat] = useState(data.sub_cat);\r\nconst [image , setImage] = useState(data.image);\r\nconst [tag , setTag] = useState(data.tag);\r\nconst [sku , setSku] = useState(data.sku);\r\nconst [shortDesc , setShortDesc] = useState(data.short_desc);\r\nconst [qty , setQty] = useState(\"\");\r\nconst [proViewType , setProViewType] = useState(\"\");\r\nconst [stock , setStock] = useState(\"\");\r\nconst user = JSON.parse(localStorage.getItem('user-info'))\r\nconst [longDesc , setLongDesc] = useState(data.long_desc);\r\nconst [featureSelect , setFeatureSelect]= useState(false)\r\nconst [topSelect , setTopSelect]= useState(false)\r\nconst [defaultSelect , setDefaultSelect]= useState(false)\r\n \r\nconst [status , setStatus] = useState(data.status);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function update(id){\r\n  \r\n  console.warn(name,price,cat,subCat,longDesc , shortDesc , image , status , sku , tag );\r\n  alert(data.price)\r\n  \r\n  const formData  = new FormData();\r\n  if(name !=\"\"){\r\n    \r\n    formData.append('name',name);\r\n  }else{\r\n    formData.append('name',data.name);\r\n  }\r\n  \r\nif(price!=\"\"){\r\n  \r\nformData.append('price',price);\r\n\r\n}\r\nelse{\r\n  formData.append('price',data.price);\r\n}\r\n\r\n\r\nif(cat==\"\"){\r\n  \r\n  \r\n  formData.append('cat',data.cat);\r\n} \r\nelse{\r\n  formData.append('cat',cat);\r\n}\r\nif(subCat==\"\"){\r\n  \r\n  \r\n  formData.append('sub_cat',data.sub_cat);\r\n}else{\r\n  formData.append('sub_cat',subCat);\r\n  \r\n}\r\n\r\n\r\nif(longDesc==\"\"){\r\n  \r\n  formData.append('long_desc',data.long_desc);\r\n}else{\r\n  \r\n  formData.append('long_desc',longDesc);\r\n  \r\n}\r\n\r\nif(shortDesc==\"\"){\r\n  \r\n  formData.append('short_desc',data.short_desc);\r\n}else{\r\n  \r\n  \r\n  \r\n  formData.append('short_desc',shortDesc);\r\n}\r\n\r\n\r\nif(image==\"\"){\r\n  \r\n  \r\n  formData.append('image',data.image);\r\n  \r\n  \r\n}else{\r\n  \r\n  formData.append('image',image);\r\n}\r\n\r\nif(sku==\"\"){\r\n  \r\n  formData.append('sku',data.sku);\r\n  \r\n}else{\r\n  formData.append('sku',sku);\r\n}\r\n\r\nif(status==\"\"){\r\n  \r\n  \r\n  formData.append('status',data.status);\r\n  \r\n}else{\r\n  formData.append('status',status);\r\n}\r\n\r\nif(tag==\"\"){\r\n  \r\n  formData.append('tag',data.tag);\r\n}else{\r\n  formData.append('tag',tag);\r\n  \r\n}\r\nif(qty==\"\"){\r\n  \r\n  formData.append('qty',data.qty);\r\n}else{\r\n  formData.append('qty',qty);\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nif(proViewType==\"\"){\r\n  \r\n  formData.append('pro_view_type',data.pro_view_type);\r\n}else{\r\nif(proViewType=='f' || proViewType=='t' || proViewType ==\"d\"){\r\n  formData.append('pro_view_type',proViewType);\r\n  \r\n\r\n}\r\n\r\nelse{\r\n  alert(\"Please Select Pro Type\")\r\n}\r\n\r\n\r\n  \r\n}\r\nif(stock==\"\"){\r\n  \r\n  formData.append('stock',data.stock);\r\n}else{\r\n  if(stock=='0' || stock=='1'){\r\n    formData.append('stock',stock);\r\n\r\n  }else{\r\n    alert(\"please Select Stock\");\r\n     \r\n  }\r\n  \r\n}\r\n\r\nformData.append('user_id',user.id);\r\nconsole.warn(formData)\r\n\r\n  let result = await fetch(\"http://127.0.0.1:8000/api/productupdate/\"+id+\"?_method=PUT\",{\r\n \r\n    method:'POST',\r\n    \r\n    body: formData\r\n  });\r\n  result = await result.json();\r\n  console.warn()\r\n  \r\n  if(result.result[0]==\"Updated\"){\r\n    alert(\"Updated\")\r\n    history.push(\"/pro\")\r\n  }\r\n  if(result.result[0]==\"Failed\"){\r\n    alert(\"Not Updated\")\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <Header />\r\n        \r\n          <div id=\"layoutSidenav\">\r\n<Sidebar />\r\n\r\n    <div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                         <h1>Update Product</h1>\r\n\r\n\r\n\r\n\r\n\r\n                         <Form>\r\n  <Form.Group className=\"mb-3 form-pro\"  controlId=\"formBasicEmail\">\r\n     \r\n    <Form.Control type=\"text\"  defaultValue={data.name}   onChange={((e)=>setName(e.target.value))} placeholder=\"Product Name\" /><br />\r\n   \r\n    <Form.Control type='number' min=\"0\"  defaultValue={data.price}  onChange={((e)=>setPrice(e.target.value))} placeholder=\" Price\" /><br />\r\n    <Form.Control type=\"number\" min=\"0\" defaultValue={data.sku}  onChange={((e)=>setSku(e.target.value))}  placeholder=\"Sku\" /><br />\r\n    \r\n    <Form.Control type='number' min=\"1\"  defaultValue={data.qty}  onChange={((e)=>setQty(e.target.value))} placeholder=\"Qty\" />``\r\n     \r\n    \r\n    <br />\r\n\r\n\r\n\r\n    <Form.Select defaultValue={data.stock}  onChange={((e)=>setStock(e.target.value))} >\r\n    <option>Select Stock</option>\r\n{\r\n data.stock==\"0\"?  <option value=\"0\">Out of Stock</option>\r\n :<option value=\"1\"> In of Stock   </option>\r\n\r\n}\r\n{\r\n data.stock==\"1\"?  <option value=\"1\"> In of Stock   </option>\r\n :<option value=\"0\">Out of Stock</option>\r\n\r\n}\r\n\r\n\r\n    \r\n  \r\n  </Form.Select>\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n    <Figure>\r\n  <Figure.Image\r\n    width={271}\r\n    height={580}\r\n    alt=\"171x180\"\r\n    src={\"http://127.0.0.1:8000/\"+data.image}\r\n  />\r\n  \r\n</Figure>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Form.Control type=\"file\" defaultValue={data.image}   onChange={((e)=>setImage(e.target.files[0]))} placeholder=\"Image\" /><br />\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <Form.Select defaultValue={data.proViewType}  onChange={((e)=>setProViewType(e.target.value))} >\r\n    <option> Select Type</option>\r\n\r\n \r\n  \r\n\r\n     <option  value=\"f\"   >  Feature Product </option>\r\n   <option value=\"t\"   > Top Product</option>\r\n    <option value=\"d\"   > Default Product </option>\r\n  </Form.Select>\r\n    <br />\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <Form.Select  defaultValue={data.cat}  onChange={((e)=>setCat(e.target.value))} >\r\n     \r\n\r\n\r\n\r\n\r\n{  \r\n\r\ncatData.map((item ,key)=>\r\n\r\n\r\n\r\ncat==item.cat_name?<option value={item.id} key={key}>{item.cat_name}</option>:\r\n \r\n\r\n<option value={item.id} key={key}>{item.cat_name}</option>\r\n)\r\n}\r\n\r\n\r\n    \r\n  </Form.Select><br />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   <Form.Select defaultValue={data.sub_cat}  onChange={((e)=>setSubCat(e.target.value))}>\r\n    <option>Sub Category Select</option>\r\n    <option>Sub Category 2</option>\r\n  </Form.Select> <br />\r\n    <Form.Select defaultValue={data.tag}  onChange={((e)=>setTag(e.target.value))} >\r\n    <option>Tag Select</option>\r\n    <option>Tag Select 1</option>\r\n    <option>Tag Select 2</option>\r\n  </Form.Select><br />\r\n    <Form.Control defaultValue={data.short_desc}  onChange={((e)=>setShortDesc(e.target.value))} placeholder=\"Short Desciption\"  as=\"textarea\" rows={3} /><br />\r\n    <Form.Control as=\"textarea\" placeholder=\"Long Description\"  defaultValue={data.long_desc}  onChange={((e)=>setLongDesc(e.target.value))} rows={5} /><br />\r\n    <Form.Select    onChange={((e)=>setStatus(e.target.value))}>\r\n    \r\n { \r\n \r\n data.status==\"0\" ?\r\n <option   value=\"1\">Deactive</option> \r\n  \r\n\r\n     :\r\n     <option   value=\"1\">Active</option> \r\n   \r\n \r\n }\r\n\r\n{ \r\n \r\n data.status==\"1\" ?\r\n <option   value=\"1\">Deactive</option> \r\n \r\n :\r\n <option   value=\"0\">Active</option> \r\n   \r\n \r\n }\r\n\r\n  \r\n \r\n  \r\n    \r\n    \r\n  </Form.Select><br />\r\n  {\r\n  \r\n  status==\"undefined\"?data.status:null\r\n  \r\n  \r\n  } \r\n    <div className=\"d-grid gap-2\">\r\n  <Button variant=\"primary\" onClick={(()=>update(data.id))} size=\"lg\">\r\n    Publish\r\n  </Button>\r\n  \r\n</div>\r\n\r\n  </Form.Group>\r\n\r\n \r\n  \r\n</Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                       \r\n                    </main>\r\n                    \r\n                </div>\r\n \r\n\r\n</div>\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(UpdateProduct);","import Header from '../../common/Header';\r\nimport { withRouter , useHistory } from 'react-router';\r\nimport { Form , Button , Figure    } from 'react-bootstrap';\r\nimport Sidebar from '../../common/Sidebar'; \r\nimport { useEffect, useState  } from 'react';\r\n\r\n\r\n\r\nfunction UpdateCategories(props){\r\n\r\n\r\n\r\n  const history = useHistory();\r\nconst[data , setData] = useState(\"\");\r\n \r\nconst [name , setName] = useState(\"\");\r\n \r\nconst [image , setImage] = useState(\"\");\r\nconst [status , setStatus] = useState(\"\");\r\nconst [statusCh , setStatusCh] = useState(\"\");\r\nconst user = JSON.parse(localStorage.getItem('user-info'));\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect( async ()=>{\r\n    let result = await fetch(\"http://127.0.0.1:8000/api/findcat/\"+props.match.params.id);\r\n    result  = await result.json();\r\n    setData(result);\r\n    // setStatusCh(result['status']);\r\n \r\n\r\n    \r\n},[])\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function update(id){\r\n \r\n    console.warn(name,image , status  );\r\n\r\n\r\n const formData  = new FormData();\r\n\r\nif(name==''){\r\n  formData.append('name',data['cat_name']);\r\n}else{\r\n  formData.append('name',name);\r\n}\r\n\r\nif(image==''){\r\n  formData.append('image',data['cat_file']);\r\n  \r\n}else{\r\n  \r\n  formData.append('image',image);\r\n}\r\n\r\n\r\nif(status=='0' || status=='1'){\r\n  formData.append('status',status);\r\n}else{\r\n  formData.append('status',data['status']);\r\n  \r\n}\r\n\r\n \r\n \r\nlet result = await fetch(\"http://127.0.0.1:8000/api/updatecat/\"+id+\"/\"+user.id+\"/\"+user.role+\"?_method=PUT\",{\r\n \r\n  method:'POST',\r\n \r\n  body: formData\r\n});\r\nresult = await result.json();\r\nconsole.warn(result)\r\n\r\nif(result==\"1\"){\r\n  alert(\"Updated\")\r\n  history.push(\"/allcat\")\r\n}\r\nelse{\r\n  alert(\"You Can Update Only Your Categories\")\r\n}\r\n  \r\n \r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <Header />\r\n        \r\n          <div id=\"layoutSidenav\">\r\n<Sidebar />\r\n\r\n    <div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                         <h1>Update  Category</h1>\r\n\r\n\r\n\r\n\r\n\r\n                         <Form>\r\n  <Form.Group className=\"mb-3 form-pro\"  controlId=\"formBasicEmail\">\r\n     \r\n    <Form.Control type=\"text\"  defaultValue={data.cat_name}   onChange={((e)=>setName(e.target.value))} placeholder=\"Product Name\" /><br />\r\n   \r\n    \r\n    <Figure>\r\n  <Figure.Image\r\n    width={171}\r\n    height={180}\r\n    alt=\"171x180\"\r\n    src={\"http://127.0.0.1:8000/\"+data.cat_file}\r\n  />\r\n  \r\n</Figure>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Form.Control type=\"file\" defaultValue={data.image}   onChange={((e)=>setImage(e.target.files[0]))} placeholder=\"Image\" /><br />\r\n    \r\n   \r\n   <Form.Select   onChange={((e)=>setStatus(e.target.value))}>\r\n    \r\n     \r\n   {data.status==1?<option value=\"1\" >Active</option>:<option value=\"0\">Deactive</option>} \r\n   {data.status==1?<option value=\"0\" >Deactive</option>:<option value=\"1\">Active</option>} \r\n    \r\n  </Form.Select><br />\r\n    \r\n    <div className=\"d-grid gap-2\">\r\n  <Button variant=\"primary\" onClick={(()=>update(data.id))} size=\"lg\">\r\n    Publish\r\n  </Button>\r\n  \r\n</div>\r\n\r\n  </Form.Group>\r\n\r\n \r\n  \r\n</Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                       \r\n                    </main>\r\n                    \r\n                </div>\r\n \r\n\r\n</div>\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(UpdateCategories);","\r\n// Tags\r\nexport const GET_ALL_TAGS = \"GET_ALL_TAGS\";\r\nexport const CREATE_TAG = \"CREATE_TAG\";\r\nexport const UPDATED_TAG = \"UPDATED_TAG\";\r\nexport const FIND_SINGLE_TAG = \"FIND_SINGLE_TAG\";\r\nexport const DELETE_SINGLE_TAG = \"DELETE_SINGLE_TAG\";\r\nexport const CHANGE_STATUS_TAG_BUTTON = \"CHANGE_STATUS_TAG_BUTTON\";\r\n\r\n\r\n\r\n\r\n// Sub Cats\r\n\r\nexport const GET_ALL_SUBCATS = \"GET_ALL_SUBCATS\";\r\nexport const CREATE_SUBCATS = \"CREATE_SUBCATS\";\r\nexport const UPDATED_SUBCATS = \"UPDATED_SUBCATS\";\r\nexport const FIND_SINGLE_SUBCATS = \"FIND_SINGLE_SUBCATS\";\r\nexport const DELETE_SINGLE_SUBCATS = \"DELETE_SINGLE_SUBCATS\";\r\nexport const CHANGE_STATUS_SUBCATS_BUTTON = \"CHANGE_STATUS_SUBCATS_BUTTON\";\r\n\r\n\r\n\r\n// Cat\r\nexport const GET_ALL_CATS = \"GET_ALL_CATS\";\r\nexport const CREATE_CATS = \"CREATE_CATS\";\r\nexport const UPDATED_CATS = \"UPDATED_CATS\";\r\nexport const FIND_SINGLE_CATS = \"FIND_SINGLE_CATS\";\r\nexport const DELETE_SINGLE_CATS = \"DELETE_SINGLE_CATS\";\r\nexport const CHANGE_STATUS_CATS_BUTTON = \"CHANGE_STATUS_CATS_BUTTON\";\r\n\r\n\r\n\r\n// PRODUCTS\r\n\r\nexport const GET_ALL_PRODUCTS = \"GET_ALL_PRODUCTS\";\r\nexport const CREATE_PRODUCTS = \"CREATE_PRODUCTS\";\r\nexport const UPDATED_PRODUCTS = \"UPDATED_PRODUCTS\";\r\nexport const FIND_SINGLE_PRODUCTS = \"FIND_SINGLE_PRODUCTS\";\r\nexport const DELETE_SINGLE_PRODUCTS = \"DELETE_SINGLE_PRODUCTS\";\r\nexport const CHANGE_STATUS_PRODUCTS_BUTTON = \"CHANGE_STATUS_PRODUCTS_BUTTON\";\r\n\r\n\r\n","import React,{useState , useEffect} from 'react';\r\nimport Header from '../../common/Header';\r\nimport Sidebar from '../../common/Sidebar';\r\nimport {Form , Button} from 'react-bootstrap';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport { getSingleSubCat, updateSubCatAc } from '../../../../Services/Actions/SubCatAction';\r\n\r\nfunction UpdateSubCat(props) {\r\n  let history = useHistory();\r\nlet [name, setName] = useState(\"\");\r\nconst user = JSON.parse(localStorage.getItem('user-info'));\r\nlet [catId, setCatId] = useState(\"\");\r\nlet [error , setError] = useState(\"\");\r\nlet [data , setData] = useState(\"\");\r\nlet [catData , setCatData] = useState([]);\r\nlet [status , setStatus ] = useState(\"\");\r\nconst id = props.match.params.id;\r\nconst dispatch = useDispatch();\r\nconst subCatSelect = useSelector(state => state.subCatRaducer);\r\nconst [subCatData,setSubCatData] =useState([]);\r\n\r\n\r\nuseEffect(() => {\r\n dispatch(getSingleSubCat(props.match.params.id));\r\n   getCatData()\r\n}, [])\r\n \r\n\r\n\r\n\r\n \r\n\r\nasync function getCatData(){\r\n\r\n  let result = await fetch(\"http://127.0.0.1:8000/api/allsubcat\");\r\n  result = await result.json();\r\n  console.log(result);\r\n  setCatData(result.result)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconsole.warn(\"Categories\",catData);\r\n\r\n\r\n\r\n\r\nfunction subCatUpdate(){\r\n \r\n\r\n  const formData = new FormData();\r\n if(name==''){\r\n\r\n\r\n  formData.append('name',subCatSelect.subCatData[0].name)\r\n\r\n }else{\r\n   formData.append('name',name);\r\n }\r\n if(catId==''){\r\n\r\n\r\n  formData.append('cat_id',subCatSelect.subCatData[0].cat_id)\r\n\r\n }else{\r\n   formData.append('cat_id',catId);\r\n }\r\n\r\n if(status=='1' || status=='0'){\r\n\r\n\r\n  formData.append('status',status)\r\n\r\n }else{\r\n   formData.append('status',subCatSelect.subCatData[0].status);\r\n }\r\n\r\n\r\ndispatch(updateSubCatAc(id,user.id,user.role , formData));\r\n \r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n   if(subCatSelect.subError=='updated'){\r\n     alert(\"Updated\")\r\n   }\r\n   else if(subCatSelect.subError=='not_update'){\r\n     alert(\"Not Updated\")\r\n   }\r\n   else if(subCatSelect.subError=='error'){\r\n     alert(\"only Admin Can Update This Sub Category \")\r\n   }\r\n}, [subCatSelect])\r\n\r\n\r\nconsole.warn('catData',catData)\r\n\r\n \r\n\r\n \r\nconsole.warn('subCatData',subCatSelect.subCatData[0])\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        <Header />\r\n        \r\n        <div id=\"layoutSidenav\">\r\n<Sidebar />\r\n\r\n\r\n<div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                         <h1 className=\"mt-5\" >Update Sub Category</h1>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                         <Form className=\"mb-3 form-pro\">\r\n\r\n\r\n                         <Form.Select  value={catId}  onChange={((e)=>setCatId(e.target.value))} >\r\n\r\n {catData.map((item,key)=>\r\nsubCatSelect.subCatData[0]?\r\nitem.cat_id==subCatSelect.subCatData[0].cat_id?<option key={key} value={item.cat_id}  >{item.cat_name}</option>:null\r\n:null\r\n)\r\n \r\n                        } \r\n\r\n                         {\r\n \r\ncatData.map((item,key)=>\r\nsubCatSelect.subCatData[0]?\r\nitem.cat_id!=subCatSelect.subCatData[0].cat_id?<option key={key} value={item.cat_id}  >{item.cat_name}</option>:null:\r\nnull)     } \r\n\r\n \r\n\r\n</Form.Select>\r\n \r\n    {subCatSelect.subCatData[0]? \r\n     subCatSelect.subCatData[0].id==id?\r\n    <Form.Control type=\"text\"   defaultValue={subCatSelect.subCatData[0].name}  className=\"mt-5 p-3 ip\"  onChange={((e)=>setName(e.target.value))} placeholder=\"Enter Sub Category Name\" />\r\n    :\r\n    \r\n    <Form.Control type=\"text\"     className=\"mt-5 p-3 ip\"  onChange={((e)=>setName(e.target.value))} placeholder=\"Enter Sub Category Name\" />\r\n  \r\n   :null\r\n    \r\n    }  <br />\r\n\r\n         \r\n       \r\n   \r\n    \r\n     <Form.Select value={status}  className=\"ip\" onChange={((e)=>setStatus(e.target.value))}>\r\n    \r\n    { subCatSelect.subCatData[0]?\r\n      subCatSelect.subCatData[0].status==1? \r\n      <><option value = \"1\">Active</option><option value=\"0\">Deactive</option> </>\r\n      :\r\n      <><option value=\"0\">Deactive</option> <option value = \"1\">Active</option> </>\r\n      : null\r\n    }\r\n    \r\n    \r\n   \r\n    \r\n\r\n\r\n\r\n  </Form.Select>\r\n   \r\n  <br />\r\n    \r\n    <div className=\"d-grid gap-2\">\r\n  <Button variant=\"primary\" onClick={subCatUpdate} size=\"lg\">\r\n    Add Sub Category\r\n  </Button>\r\n  \r\n</div>\r\n \r\n\r\n \r\n  \r\n</Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                       \r\n                    </main>\r\n                    \r\n                </div>\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateSubCat);\r\n","import { \r\n    GET_ALL_SUBCATS ,\r\n    CHANGE_STATUS_SUBCATS_BUTTON,\r\n    CREATE_SUBCATS,\r\n    UPDATED_SUBCATS,\r\n    FIND_SINGLE_SUBCATS,\r\n    DELETE_SINGLE_SUBCATS\r\n\r\n\r\n\r\n} from \"../Constant\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport const getSingleSubCat = (id)=> async(dispatch)=>{\r\n\r\nconst result = await axios.get(\"http://127.0.0.1:8000/api/findsubcat/\"+id);\r\ndispatch({\r\n    type: FIND_SINGLE_SUBCATS,\r\n    payload: result.data.result,\r\n    msg:result.data.msg\r\n\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getAllSubCats=()=> async (dispatch)=>{\r\n\r\n\r\n    const result =  await axios.get(\"http://127.0.0.1:8000/api/allsubcat\");\r\n    dispatch({\r\n        type: GET_ALL_SUBCATS,\r\n        payload: result.data.result,\r\n        msg:result.data.msg\r\n\r\n    });\r\n    \r\n \r\n\r\n}\r\n\r\nexport const changeStatusAc=(id,userId,role)=>async (dispatch)=>{\r\n    const result = await axios.post(\"http://127.0.0.1:8000/api/changesubcatstatus/\"+id+\"/\"+userId+\"/\"+role+\"?_method=PUT\");\r\n   dispatch({\r\n       type:CHANGE_STATUS_SUBCATS_BUTTON,\r\n       payload:result.data.result,\r\n       msg:result.data.msg\r\n   }) \r\n}\r\n\r\n\r\n\r\nexport const createSubCatAc = (data)=> async(dispatch)=>{\r\n\r\n    const result =await axios.post(\"http://127.0.0.1:8000/api/addsubcat\",data);\r\n   \r\n        dispatch({\r\n            type:CREATE_SUBCATS,\r\n     payload:result.data.result,\r\n            msg: result.data.msg\r\n    \r\n        })\r\n\r\n    \r\n       \r\n \r\n}\r\nexport const deleteSubcatAc = (id,userId,userRole)=>async(dispatch)=>{\r\n    const result =await axios.delete(\"http://127.0.0.1:8000/api/deletesubcat/\"+id+\"/\"+userId+\"/\"+userRole);\r\n    dispatch({\r\n        type:DELETE_SINGLE_SUBCATS,\r\n        payload:id,\r\n        msg: result.data.msg,\r\n         \r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const updateSubCatAc = (id,userId,userRole,formData)=>async(dispatch)=>{\r\n    const result = await axios.post(\"http://127.0.0.1:8000/api/updatesubcat/\"+id+\"/\"+userId+\"/\"+userRole+\"?_method=PUT\",formData);\r\n    dispatch({\r\n        type:UPDATED_SUBCATS,\r\n        payload:result.data.result,\r\n        msg:result.data.msg\r\n    });\r\n}","import {\r\n    CHANGE_STATUS_TAG_BUTTON,\r\n    DELETE_SINGLE_TAG,\r\n    FIND_SINGLE_TAG,\r\n    GET_ALL_TAGS,\r\n    UPDATED_TAG,CREATE_TAG\r\n} from \"../Constant\";\r\n \r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n// start All Tags  Action\r\nexport const getAllTagAc = () => async (dispatch) => {\r\n \r\n    const result = await axios.get(\"http://127.0.0.1:8000/api/alltags\");\r\nif( result.data!=0){\r\n    dispatch({\r\n        type: GET_ALL_TAGS,\r\n        payload: result.data\r\n    });\r\n}else{\r\n\r\n    dispatch({\r\n        type: GET_ALL_TAGS,\r\n        \r\n    });\r\n\r\n\r\n}\r\n\r\n\r\n}\r\n// End All Tags Action\r\n\r\n\r\n\r\n//Start Single Tag Find \r\n\r\nexport const findSingleTag = (id, userId) => async (dispatch) => {\r\n    const result = await axios.get(\"http://127.0.0.1:8000/api/findtag/\" + id + \"/\" + userId);\r\n    dispatch({\r\n        type: FIND_SINGLE_TAG,\r\n        payload: result.data\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n//End Single Tag Find\r\n\r\n\r\n\r\n\r\n// Start Create Tag\r\n\r\nexport const createTagAc = (data) => async (dispatch) => {\r\n    const result = await axios.post(\"http://127.0.0.1:8000/api/addtag\", data);\r\n\r\n    dispatch({\r\n        type: CREATE_TAG,\r\n        payload:result.data.result,\r\n        msg: result.data.msg\r\n    })\r\n \r\n \r\n  \r\n\r\n}\r\n// End create tag\r\n\r\n\r\n//Delete Tag\r\n\r\nexport const deleteSingleTag = (id,userId)=>async (dispatch)=>{\r\n    const result = await axios.delete(\"http://127.0.0.1:8000/api/deletetag/\"+id+\"/\"+userId);\r\n\r\n\r\ndispatch({\r\n    type:DELETE_SINGLE_TAG,\r\n    payload :result.data,\r\n     \r\n})\r\n\r\n\r\n}\r\n\r\n\r\n// End Delet6e Tag \r\n\r\n\r\n\r\n\r\n\r\n// Start update Tag \r\n\r\n\r\nexport const updatedTag = (formData, id, userId) => async (dispatch) => {\r\n    const result = await axios.post(\"http://127.0.0.1:8000/api/updatetag/\" + id + \"/\" + userId + \"?_method=PUT\", formData);\r\n \r\n\r\n    if(result.data==1){\r\n    dispatch({\r\n        type: UPDATED_TAG,\r\n        payload: result.data,\r\n        msg:result.data\r\n    })}\r\n\r\n    else if(result.data==0){\r\n        dispatch({\r\n            type: UPDATED_TAG,  \r\n            msg: \"Not_Updated\",\r\n            payload: result.data\r\n\r\n        })}\r\n    else{\r\n                dispatch({\r\n                    type: UPDATED_TAG,\r\n                    payload: result.data,\r\n                    msg: 'error'\r\n        \r\n                })}\r\n            }\r\n        \r\n        \r\n    \r\n// End Updated Tag\r\n\r\n\r\n// Start Status change\r\n\r\nexport const statusChangeTagButon=(id,userId)=> async (dispatch)=>{;\r\n\r\n    const result = await axios.post(\"http://127.0.0.1:8000/api/change_status/\"+id+\"/\"+userId+\"?_method=PUT\");\r\n\r\n\r\n\r\ndispatch({\r\n    type: CHANGE_STATUS_TAG_BUTTON,\r\n    payload:result.data,\r\n    result: result\r\n\r\n})\r\n\r\n\r\n}\r\n\r\n// End status Change \r\n","import React , {useEffect ,useState} from 'react';\r\nimport Header from '../../common/Header';\r\nimport Sidebar from '../../common/Sidebar';\r\nimport {Table, Button} from 'react-bootstrap';\r\n import { Link, withRouter} from 'react-router-dom';\r\n \r\nimport {useSelector , useDispatch} from 'react-redux';\r\nimport {deleteSingleTag, getAllTagAc, statusChangeTagButon} from '../../../../Services/Actions/TagAction'\r\n\r\nfunction AllTags() {\r\nconst dispatch = useDispatch()\r\nconst tagsSel = useSelector((state) => state.TagRaducer.tagsData);\r\n \r\n \r\n\r\n\r\n   \r\n    const user = JSON.parse(localStorage.getItem('user-info'));\r\n\r\n\r\n\r\n    useEffect(() => {\r\n     \r\n dispatch(getAllTagAc());\r\n    \r\n      \r\n       \r\n    \r\n     }, [])\r\n\r\n     \r\n \r\n\r\n\r\n  function deleteTag(id){\r\n \r\n\r\n  dispatch(deleteSingleTag(id,user.id))\r\n \r\n    dispatch(getAllTagAc());  \r\n \r\n\r\n}\r\n\r\n  function statusChange(id){\r\n\r\n    \r\n\r\nconsole.warn(\"status\",dispatch(statusChangeTagButon(id,user.id)));\r\ndispatch(getAllTagAc());\r\n \r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        <Header />\r\n        \r\n        <div id=\"layoutSidenav\">\r\n<Sidebar />\r\n\r\n\r\n<div id=\"layoutSidenav_content\">\r\n                    <main>\r\n                    <div className=\"container-fluid px-4\">\r\n                        <h1 className=\"mt-4\">Tags</h1>\r\n                        <ol className=\"breadcrumb mb-4\">\r\n                            <li className=\"breadcrumb-item\"><Link to=\"/\">Dashboard</Link></li>\r\n                            <li className=\"breadcrumb-item active\"> Tags </li>\r\n                         \r\n                            <li  className=\"breadcrumb-item active\"   ><Link to=\"/addtags\">Add </Link></li>\r\n                        </ol>\r\n                       \r\n                     \r\n                        <div className=\"card mb-4\">\r\n                            <div className=\"card-header\">\r\n                                <i className=\"fas fa-table me-1\"></i>\r\n                Tags\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            <Table striped bordered hover size=\"sm\">\r\n  <thead>\r\n    <tr>\r\n      <th style={{width:100}}>Sno</th>\r\n      <th style={{width:150}}>Tags</th>\r\n      {/* <th style={{width:150}}>Categories</th> */}\r\n     <th style={{width:150}}>Status</th>\r\n      <th style={{width:350}}>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {\r\ntagsSel.map((item , key)=>\r\n\r\n\r\n<tr  key={key}>\r\n      <td>{key+1}</td>\r\n      <td>{item.name}</td>\r\n      {/* <td>{item.cat_name}</td> */}\r\n     \r\n           \r\n      <td>{\r\n      \r\n      item.status=='1' ?'Active' :'Deactive'\r\n      \r\n      }</td>\r\n      {\r\n \r\n      }\r\n      <td>\r\n      <Link to={\"/updatetag/\"+item.id}  className=\"btn btnpro btn-success\">Edit</Link>\r\n     {item.status==0 ? <Button  onClick={(()=>{statusChange(item.id)})} className=\" btnpro btn-primary\">Active </Button>:<Button  onClick={(()=>{statusChange(item.id)})} className=\" btnpro btn-danger\">Deactive </Button> }\r\n      <Button  onClick={(()=>{deleteTag(item.id)})} className=\" btnpro btn-danger\">Delete</Button>\r\n      </td>\r\n    </tr>\r\n\r\n\r\n\r\n\r\n)\r\n\r\n\r\n\r\n    }\r\n    \r\n  </tbody>\r\n</Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n \r\n\r\n\r\n\r\n\r\n                       \r\n                    </main>\r\n                    \r\n                </div>\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(AllTags);\r\n","import React , {useEffect} from 'react';\r\nimport Header from '../../common/Header';\r\nimport Sidebar from '../../common/Sidebar';\r\nimport {Form , Button} from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n import {useHistory, withRouter} from 'react-router-dom';\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport { findSingleTag, updatedTag } from '../../../../Services/Actions/TagAction';\r\n\r\n\r\n\r\n\r\n \r\n function UpdateTag(props) {\r\n     \r\nlet dispatch= useDispatch(); \r\n  useEffect( () => {\r\n    dispatch(findSingleTag(props.match.params.id , JSON.parse(localStorage.getItem('user-info')).id))\r\n\r\n   \r\n},[]);\r\n\r\n\r\n   const history = useHistory();\r\n   const user = JSON.parse(localStorage.getItem('user-info'));\r\n   const [status ,setStatus] = useState(\"\");\r\n   const [error , setError] = useState(\"\");\r\n   const [name , setName] = useState(\"\");\r\n \r\n   const [catId , setCatId] = useState(\"\");\r\n   const [data, setData]=useState(\"\")\r\n   const [catData, setCatData]=useState([]);\r\n   \r\n   let id = props.match.params.id;\r\n   const TagState = useSelector(state => state.TagRaducer.tagsData[0]);\r\n\r\n   let updateState = useSelector(state => state.TagRaducer.error);\r\n    \r\n \r\n\r\n \r\n\r\n \r\n\r\n useEffect( async() => {\r\n     \r\n    let result  = await fetch(\"http://127.0.0.1:8000/api/allcat\");\r\n    result = await result.json();\r\n  setCatData(result);\r\n   \r\n\r\n }, []);\r\n//  console.warn(\"Check Finf\",TagState)\r\n\r\nasync  function tagupdate(){\r\n \r\n const formData = new FormData();\r\n    if(name==''){\r\n        formData.append('name' ,TagState.name);\r\n         \r\n        }\r\n        else{\r\n            formData.append('name' ,name );\r\n             \r\n        }\r\n        \r\n    \r\n        if(status==''){\r\n            formData.append('status',TagState.status);\r\n           \r\n        }\r\n        else{\r\n            formData.append('status',status);\r\n        }\r\n    \r\n    \r\n        if(catId=='0' || catId==''){\r\n            formData.append('cat_id',TagState.cat_id);\r\n        }\r\n        else{\r\n            formData.append('cat_id',catId);\r\n           \r\n        }\r\n      \r\n   \r\n  dispatch(updatedTag(formData,id,user.id));\r\n \r\n \r\n  \r\n\r\n\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n   \r\n  if(updateState==='Not_Updated'){\r\n    setError(\"You Can't Update Only Admin can Updated\")\r\n      }\r\n   else if(updateState===1){\r\n    setError(\"Updated\")\r\n         history.push('/alltags');\r\n      }\r\n       \r\n   else{\r\n  \r\n      }\r\n      \r\n}, [updateState])\r\n\r\n \r\n    return (\r\n        <> \r\n        <Header />\r\n        \r\n        <div id=\"layoutSidenav\">\r\n<Sidebar />\r\n\r\n\r\n<div id=\"layoutSidenav_content\">\r\n  {error?<div className=\"alert alert-danger\" role=\"alert\">\r\n  {error}\r\n</div>:null}\r\n\r\n                    <main>\r\n                         <h1 className=\"mt-5\" >Tag Update</h1>\r\n      \r\n                         <Form className=\"mb-3 mt-5 form-pro\">\r\n  \r\n  <Form.Select value={catId}  onChange={((e)=>setCatId(e.target.value))} >\r\n \r\n\r\n\r\n\r\n\r\n\r\n{\r\ncatData.map((item , key)=>\r\n \r\n  TagState?\r\n  TagState.id==id?\r\nTagState.cat_name==item.cat_name? <option  key={key}  value={item.id}>{item.cat_name}</option> : null: null:null\r\n  )\r\n \r\n}\r\n{\r\ncatData.map((item , key)=>\r\n \r\n TagState? TagState.id==id?\r\nTagState.cat_name!=item.cat_name? <option key={key}  value={item.id}>{item.cat_name}</option>: null: null:null\r\n  )\r\n\r\n\r\n\r\n}\r\n \r\n \r\n\r\n\r\n</Form.Select>\r\n<span className=\"error\"> {error == \"Please Select Category\" ? error : null } </span>\r\n   {\r\n     \r\n TagState?\r\n TagState.id==id?\r\n    <Form.Control defaultValue={TagState.name} type=\"text\" className=\"mt-5 p-3 ip\"  onChange={((e)=>setName(e.target.value))} placeholder=\"Enter Tag Name\" />:\r\n  \r\n  \r\n  null:null  }\r\n\r\n    \r\n    <br />\r\n<br />\r\n         \r\n       \r\n   \r\n    \r\n     <Form.Select   className=\"ip\" onChange={((e)=>setStatus(e.target.value))}>\r\n    \r\n    \r\n     { \r\n\r\n     TagState?\r\n     TagState.id==id?\r\n     TagState.status==1 ?<>\r\n     < option value = \"1\">Active</option>\r\n     <option value = \"0\">Deactive</option>\r\n     </>:<>  <option value = \"0\">Deactive</option>\r\n     < option value = \"1\">Active</option></>:null\r\n     :null\r\n     \r\n     }\r\n     \r\n  \r\n  \r\n  \r\n      \r\n  </Form.Select>\r\n  <span className=\"error\"> { error==\"Please Select Status\" ? error : null } </span>\r\n  <br /><br />\r\n    \r\n    <div className=\"d-grid gap-2\">\r\n  <Button variant=\"primary\" onClick={tagupdate} size=\"lg\">\r\n    Publish\r\n  </Button>\r\n  \r\n</div>\r\n\r\n  \r\n \r\n  \r\n</Form>\r\n\r\n\r\n\r\n              \r\n                    </main>\r\n                    \r\n                </div>\r\n \r\n</div>\r\n</>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateTag);\r\n","import Home from \"./component/adminPanel/Home\";\n \n\nfunction App() {\n  return (\n    <>\n<Home />\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_STATUS_TAG_BUTTON, CREATE_TAG, DELETE_SINGLE_TAG, FIND_SINGLE_TAG, GET_ALL_TAGS, UPDATED_TAG } from \"../Constant\";\r\n\r\nconst initialState={\r\n    tagsData:[],\r\n    error: ''\r\n}\r\n\r\nexport  default (state=initialState , {type,payload , msg })=>\r\n{\r\n\r\n    switch (type) {\r\n        case GET_ALL_TAGS:\r\n            console.warn(\"payload again\",payload)\r\n            return{\r\n                ...state,\r\n                tagsData: payload\r\n            }\r\n\r\n        case FIND_SINGLE_TAG:\r\n                \r\n               return{\r\n                ...state, \r\n                tagsData:payload,\r\n               \r\n               }   \r\n            \r\n        case CREATE_TAG:\r\n            return{\r\n                ...state,\r\n                error:msg,\r\n                tagsData:[payload,...state.tagsData]\r\n            } \r\n            \r\n            \r\n        case UPDATED_TAG:\r\n        console.warn(\"Update to\",state.error=msg)\r\n\r\n\r\n \r\n            return{\r\n                \r\n                error: msg,\r\n                tagsData: state.tagsData.map((tags)=>\r\n                tags.id==payload.id?payload: tags\r\n                \r\n                ),\r\n            } \r\n            \r\n        case CHANGE_STATUS_TAG_BUTTON:\r\n            return{\r\n                ...state,\r\n                tagsData:state.tagsData.map((tags)=>\r\n                tags.id==payload.id?payload: tags,\r\n                \r\n                ),\r\n         \r\n            }\r\n\r\n        \r\n        case DELETE_SINGLE_TAG:\r\n            return{\r\n                ...state,\r\n                tagsData: state.tagsData.filter((tag)=>\r\n                tag.id!=payload)\r\n            }\r\n\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { GET_ALL_SUBCATS, CHANGE_STATUS_SUBCATS_BUTTON, CREATE_SUBCATS, DELETE_SINGLE_SUBCATS, FIND_SINGLE_SUBCATS, UPDATED_SUBCATS } from \"../Constant\";\r\n\r\nconst initialState = {\r\n    subCatData: [],\r\n    subError: ''\r\n}\r\n\r\n\r\nexport default (state = initialState, { type, payload, msg }) => {\r\n\r\n\r\n\r\n    switch (type) {\r\n        case GET_ALL_SUBCATS:\r\n            if(msg=='show_all_sub'){\r\n            return {\r\n                ...state,\r\n                subError: msg,\r\n                subCatData: payload\r\n            }\r\n        }else{ return { subError: msg } }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        case FIND_SINGLE_SUBCATS:\r\n            if(msg=='get_single'){\r\n               \r\n                return {\r\n                    ...state,\r\n                    subError: msg,\r\n                    subCatData: payload\r\n                }\r\n\r\n            }\r\n            else{ return { subError: msg  }   }\r\n\r\n\r\n\r\n\r\n\r\n        case CHANGE_STATUS_SUBCATS_BUTTON:\r\n            if(msg=='status_changed'){\r\n                return {\r\n                    ...state,\r\n                    subError: msg,\r\n                    subCatData: state.subCatData.map((subCat) =>\r\n                        subCat.id == payload.id ? state.subCatData:payload )\r\n                }\r\n\r\n            }\r\n            else{\r\n                return { subError: msg    }\r\n            }\r\n          \r\n            case CREATE_SUBCATS:\r\n            if (msg == \"inserted\") {\r\n                return {\r\n                    ...state,\r\n                    subError: msg,\r\n                    subCatData: payload\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n\r\n                    subError: msg\r\n                }\r\n            }\r\n\r\n        case DELETE_SINGLE_SUBCATS:\r\n            if (msg == \"deleted\") {\r\n                return {\r\n                    ...state,\r\n                    subError: msg,\r\n                    subCatData: state.subCatData.filter((subCat) =>\r\n                        subCat.id !== payload)\r\n                }\r\n\r\n            }\r\n            else {\r\n                return {\r\n                    subError: msg\r\n                }\r\n            }\r\n        \r\n        case UPDATED_SUBCATS:\r\n            if(msg==\"updated\"){\r\n                return{\r\n                    ...state,\r\n                    subError: msg,\r\n                    subCatData: state.subCatData.filter((subCat)=>\r\n                    subCat.id==payload.id?state.subCatData:payload\r\n                    )\r\n                }\r\n            }  \r\n            else{\r\n                return { subError:msg }\r\n            }        \r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport TagRaducer from \"./TagRaducer\";\r\nimport  subCatRaducer from \"./subCatRaducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    TagRaducer,\r\n    subCatRaducer,\r\n    \r\n});\r\n","import {createStore , applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootRaducer from './Services/Reducer/index';\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(\r\n    rootRaducer,\r\n    composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n \nimport {Provider} from 'react-redux';\nimport store from './store';\n\nconsole.warn(\"StoreCheck\",store)\nReactDOM.render(\n \n    <React.StrictMode>\n\n\n    </React.StrictMode>\n\n    ,\n  document.getElementById('root')\n);\n\n \nreportWebVitals();\n"],"sourceRoot":""}